// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6333.DeepSpace;

import org.usfirst.frc6333.DeepSpace.commands.*;
//import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.*;
//import org.usfirst.frc6333.DeepSpace.subsystems.*;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton driveHalfButton;
    public JoystickButton switchCameraButton;
    public Joystick mainJoy;
 
    public JoystickButton StopButton; //Joystick 1, Button 1
    public JoystickButton StartButton; //Joystick 1, Button 2
    public JoystickButton PreBallButton; //Joystick 1, Button 3
    public JoystickButton GrabBallButton; //Joystick 1, Button 4
    public JoystickButton PreHatchButton; //Joystick 1, Button 5
    public JoystickButton GrabHatchButton; //Joystick 1, Button 6
    public JoystickButton FingerCloseButton; //Joystick 1, Button 7
    public JoystickButton FingerOpenButton; //Joystick 1, Button 8
    public JoystickButton HatchFloorOrStationButton; //Joystick 1, Button 9
    public JoystickButton PreRocket3Button; //Joystick 1, Button 10
    public JoystickButton ReleaseRocket3Button; //Joystick 1, Button 11
    public JoystickButton PreRocket2Button; //Joystick 1, Button 12
    public Joystick LoadJoy;

    public JoystickButton ReleaseRocket2Button; //Joystick 2, Button 1
    public JoystickButton PreRocket1Button; //Joystick 2, Button 2
    public JoystickButton ReleaseRocket1Button; //Joystick 2, Button 3
    public JoystickButton PreCargoButton; //Joystick 2, Button 4
    public JoystickButton ReleaseCargoButton; //Joystick 2, Button 5
    public JoystickButton WheelDownButton; //Joystick 2, Button 6
    public JoystickButton LowerRobotButton; //Joystick 2, Button 7
    public JoystickButton PlatformLevelButton; //Joystick 2, Button 8
    public JoystickButton BallHatchButton; //Joystick 2, Button 9
    public JoystickButton LiftRobotButton; //Joystick 2, Button 10
    public JoystickButton WheelUpButton; //Joystick 2, Button 11
    public Joystick PlatJoy;

    public JoystickButton ResetArmButton; //Joystick 3, Button 9
    public JoystickButton ShoulderUpButton; //joystick 3, Button 7
    public JoystickButton ShoulderDownButton; //joystick 3, button 8
    public JoystickButton ElbowupButton; // joystick 3, Button 5
    public JoystickButton ElbowDownButton; //Joystick 3, Button 6
    public JoystickButton WristUpButton; // Joystick 3, Button 3
    public JoystickButton WristDownButton; // Joystick 3, Button 4
    public JoystickButton FingerInButton; // Joystick 3, Button 1
    public JoystickButton FingerOutButton; // Joystick 3, BUtton 2
    public Joystick DebugJoy;

    public OI() {
        
        DebugJoy = new Joystick(3);
        ResetArmButton = new JoystickButton(DebugJoy, 9);
        ResetArmButton.whenPressed(new Startup());
        ShoulderUpButton = new JoystickButton(DebugJoy, 7);
        ShoulderUpButton.whenPressed(new ShoulderUp());
        ShoulderDownButton = new JoystickButton(DebugJoy, 8);
        ShoulderDownButton.whenPressed(new ShoulderDown());
        ElbowupButton = new JoystickButton(DebugJoy, 5);
        ElbowupButton.whenPressed(new ElbowUp());
        ElbowDownButton = new JoystickButton(DebugJoy, 6);
        ElbowDownButton.whenPressed(new ElbowDown());
        WristUpButton = new JoystickButton(DebugJoy, 3);
        WristUpButton.whenPressed(new WristUp());
        WristDownButton = new JoystickButton(DebugJoy, 4);
        WristDownButton.whenPressed(new WristDown());
        FingerInButton = new JoystickButton(DebugJoy, 1);
        FingerInButton.whenPressed(new FingersIn());
        FingerOutButton = new JoystickButton(DebugJoy, 2);
        FingerOutButton.whenPressed(new FingersOut());

        PlatJoy = new Joystick(2);
        ReleaseRocket2Button = new JoystickButton(PlatJoy, 1);
        ReleaseRocket2Button.whenPressed(new Release());
        PreRocket1Button = new JoystickButton(PlatJoy, 2);
        PreRocket1Button.whenPressed(new PreRocket1());
        ReleaseRocket1Button = new JoystickButton(PlatJoy, 3);
        ReleaseRocket1Button.whenPressed(new Release());
        PreCargoButton = new JoystickButton(PlatJoy, 4);
        PreCargoButton.whenPressed(new PreCargo());
        ReleaseCargoButton = new JoystickButton(PlatJoy, 5);
        ReleaseCargoButton.whenPressed(new Release());
        WheelDownButton = new JoystickButton(PlatJoy, 6);
        WheelDownButton.whenPressed(new WheelDown());
        LowerRobotButton = new JoystickButton(PlatJoy, 7);
        LowerRobotButton.whenPressed(new LowerRobot());
        PlatformLevelButton = new JoystickButton(PlatJoy, 8);
        //PlatformLevelButton.whenPressed(new ShoulderUp()); //Switch Only No Action
        BallHatchButton = new JoystickButton(PlatJoy, 9);
        //BallHatchButton.whenPressed(new ShoulderUp()); //Switch Only No Action
        LiftRobotButton = new JoystickButton(PlatJoy, 10);
        LiftRobotButton.whenPressed(new LiftRobot());
        WheelUpButton = new JoystickButton(PlatJoy, 11);
        WheelUpButton.whenPressed(new WheelUp());
        
        LoadJoy = new Joystick(1);
        StopButton = new JoystickButton(LoadJoy, 1);
        StopButton.whenPressed(new Emergency());
        StartButton = new JoystickButton(LoadJoy,2);
        StartButton.whenPressed(new Startup());
        PreBallButton = new JoystickButton(LoadJoy,3);
        PreBallButton.whenPressed(new PreBallPickup());
        GrabBallButton = new JoystickButton(LoadJoy,4);
        GrabBallButton.whenPressed(new GrabBall());
        PreHatchButton = new JoystickButton(LoadJoy,5);
        PreHatchButton.whenPressed(new PreHatchPickup());
        GrabHatchButton = new JoystickButton(LoadJoy,6);
        GrabHatchButton.whenPressed(new GrabHatch());
        FingerCloseButton = new JoystickButton(LoadJoy,7);
        FingerCloseButton.whenPressed(new FingersClose());
        FingerOpenButton = new JoystickButton(LoadJoy,8);
        FingerOpenButton.whenPressed(new FingersOpen());
        HatchFloorOrStationButton = new JoystickButton(LoadJoy,9);
        //HatchFloorOrStationButton.whenPressed(new Startup()); // Switch Only No Action
        PreRocket3Button = new JoystickButton(LoadJoy,10);
        PreRocket3Button.whenPressed(new PreRocket3());
        ReleaseRocket3Button = new JoystickButton(LoadJoy,11);
        ReleaseRocket3Button.whenPressed(new Release());
        PreRocket2Button = new JoystickButton(LoadJoy,12);
        PreRocket2Button.whenPressed(new PreRocket2());
        
       
        mainJoy = new Joystick(0);
        driveHalfButton = new JoystickButton(mainJoy, 1);
        driveHalfButton.whenPressed(new DriveHalf());
        switchCameraButton = new JoystickButton(mainJoy, 2);
        switchCameraButton.whenPressed(new SwitchCamera());


        // SmartDashboard Buttons
        /*
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        SmartDashboard.putData("GotoGround", new GotoGround());
    
        */
    }

    public Joystick getMainJoy() {
        return mainJoy;
    }

    public Joystick getPlatJoy() {
        return PlatJoy;
    }

    public Joystick getLoadJoy() {
        return LoadJoy;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

