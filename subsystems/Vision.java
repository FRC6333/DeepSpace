// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6333.DeepSpace.subsystems;




//import org.usfirst.frc6333.DeepSpace.commands.*;
//import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
//import edu.wpi.first.wpilibj.PIDOutput;
//import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.cameraserver.CameraServer;
import edu.wpi.cscore.UsbCamera;
//import edu.wpi.first.wpilibj.smartdashboard.*;
import edu.wpi.first.networktables.*;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Vision extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private Solenoid light;
    public UsbCamera fingerCam;
    public UsbCamera frontCam;
    public UsbCamera backCam;
    public int selectedCamera;

    public CameraServer dashboardCameraServer;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public Vision() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
      //  light = new Solenoid(0, 0);
      //  addChild("Light",light);
      fingerCam = CameraServer.getInstance().startAutomaticCapture("fingerCam", 0);
      frontCam = CameraServer.getInstance().startAutomaticCapture("frontCam", 1);
      backCam = CameraServer.getInstance().startAutomaticCapture("backCam", 2);
      fingerCam.setResolution(80, 60);
      frontCam.setResolution(80, 60);
      backCam.setResolution(80, 60);
      fingerCam.setFPS(5);
      frontCam.setFPS(5);
      backCam.setFPS(5);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }


    @Override
    public void initDefaultCommand() {
      
        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    public void switchCamera(){
        if (selectedCamera == 0){
            NetworkTableInstance.getDefault().getTable("").getEntry("CameraSelection").setString(frontCam.getName());
            selectedCamera = 1;
        }
        else if (selectedCamera == 1){
            NetworkTableInstance.getDefault().getTable("").getEntry("CameraSelection").setString(backCam.getName());
            selectedCamera = 2;
        }
        else{
            NetworkTableInstance.getDefault().getTable("").getEntry("CameraSelection").setString(fingerCam.getName());
            selectedCamera = 0;
        }
    }

    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

