// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6333.DeepSpace.commands;
import org.usfirst.frc6333.DeepSpace.Robot;

import edu.wpi.first.wpilibj.command.Command;
//import org.usfirst.frc6333.DeepSpace.Robot;

/**
 *
 */
public class GotoHatch2 extends Command {

    private int ElbowSetpoint = 933;
    private int ShoulderSetpoint = -196;
    private int WristSetpoint = 112162;

    private boolean ElbowPID;
    private boolean ShoulderPID;

    public GotoHatch2() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        //requires(Robot.shoulder);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
           /* Order of Arm Operations
        *   1. Adjust Elbow
        *   2. Adjust Wrist
        *   3. Adjust Shoulder
        */

        Robot.elbow_sub.setSetpoint(ElbowSetpoint);
        Robot.elbow_sub.enable();
        //Robot.elbow_sub.set_PID_Running(true);
        //Robot.shoulder_sub.set_PID_Running(true);
        ElbowPID = false;
        ShoulderPID = false;
        }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        int Counter;
        Counter = Robot.shoulder_sub.getShoulderEncoderCount();
        
        if (Math.abs(ShoulderSetpoint-Robot.shoulder_sub.getShoulderEncoderCount())<100) {
            System.out.print("Shutting off Shoulder PID\n");
            Robot.shoulder_sub.disable();
            ShoulderPID = true;
            Robot.shoulder_sub.set_PID_Running(false);

            Robot.wrist_sub.setSetpoint(WristSetpoint);
            Robot.wrist_sub.enable();
            Robot.wrist_sub.set_PID_Running(true);
            }
        Counter = Robot.elbow_sub.getElbowEncoderCount();
    
        if (Math.abs(ElbowSetpoint-Robot.elbow_sub.getElbowEncoderCount())<50) {
            System.out.print("Shutting off Elbow PID\n");
            Robot.elbow_sub.disable();
            ElbowPID=true;
            Robot.elbow_sub.set_PID_Running(false);
            
            Robot.shoulder_sub.setSetpoint(ShoulderSetpoint);
            Robot.shoulder_sub.enable();
            Robot.shoulder_sub.set_PID_Running(true);
    
        }
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        /*if (Robot.elbow_sub.get_PID_Status() || Robot.shoulder_sub.get_PID_Status()) return false;
        else return true;
*/
        if (ShoulderPID && ElbowPID) {
            System.out.print("Command Done\n");
            return true;
        }
        else return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        Robot.shoulder_sub.disable();
        Robot.elbow_sub.disable();
        System.out.print("Ending GotoHatch2\n");
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}
